# Same image as original Dockerfile lowquality/gentle
FROM public.ecr.aws/lambda/python:3.8

# Setting the working directory
WORKDIR /gentle

# Installing the dependencies
RUN yum update -y && yum install -y \ 
        gcc g++ gfortran curl \
        libc++-dev zlib1g-dev \
        automake autoconf libtool \
        git subversion zlib-devel\
        libatlas3-base gcc-c++ gcc-gfortran \
        make patch bzip2 \
        python3 python3-dev python3-pip \
        sox python2.7 tar xz \
        wget unzip && \
        yum clean all

# Copying files
COPY . .
# Boosting the build speed by using 10 cores; Remove this if you are not using a powerful machine
ARG MAKEFLAG=' -j1'
ENV MAKEFLAGS=$MAKEFLAG

# Installing ffmpeg since it is not available in the AWS Lambda environment yet; Specify amazonlinux
RUN tar xvf zips/ffmpeg-git-amd64-static.tar.xz && \
        rm ffmpeg-git-amd64-static.tar.xz ffmpeg-git-amd64-static.tar.xz.md5 && \
        mv ffmpeg-git-*-amd64-static ffmpeg && \
        mv ffmpeg/ffmpeg /usr/local/bin/ffmpeg

# Running the installation scripts
RUN ./install_c.sh

# Installing the AWS Lambda Runtime Interface Emulator
RUN curl -Lo /usr/local/bin/aws-lambda-rie \
        https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie && \
        chmod +x /usr/local/bin/aws-lambda-rie && \
        pip install awslambdaric

# Copying the app for testing purposes
COPY app.py ${LAMBDA_TASK_ROOT}

# Copying the entry script to check presense of the Lambda Runtime Interface Interface Emulator
# COPY ./entry_script.sh /entry_script.sh

RUN ./remove_excess.sh

# Setting the entry point
ENTRYPOINT [ "/gentle/entry_script.sh" ]

# Running the Lambda Function
CMD [ "app.handler" ]